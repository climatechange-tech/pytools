miscellaneous/passwords.py:    chars_glob = [chr(i) for i in range(lower_char_idx, upper_char_idx)]
miscellaneous/passwords.py:    char_randomsel_list = [chars_glob[j] for j in random_idx]
miscellaneous/merge_audio_and_video_main.py:    for obj in enumerate(objList, start=starting_number):
miscellaneous/cat_file_content.py:        for line in file:
files_and_directories/bulk_numRename_main.py:    for obj in enumerate(objList, start=starting_number):
files_and_directories/file_and_directory_paths.py:                    for file in ptwi_path.iterdir()
files_and_directories/file_and_directory_paths.py:                    for ext in extensions
files_and_directories/file_and_directory_paths.py:                    for file in ptwi_path
files_and_directories/file_and_directory_paths.py:                    for ext in extensions
files_and_directories/file_and_directory_paths.py:                        for fs in file_string
files_and_directories/file_and_directory_paths.py:                        for file in ptwi_path.glob(f"{fs}")
files_and_directories/file_and_directory_paths.py:                             for path in ptwi_path
files_and_directories/file_and_directory_paths.py:                             for fs in file_string
files_and_directories/file_and_directory_paths.py:                             for file in path.glob(f"{fs}")
files_and_directories/file_and_directory_paths.py:                            for fs in file_string
files_and_directories/file_and_directory_paths.py:                            for file in ptwi_top.glob(f"{fs}")
files_and_directories/file_and_directory_paths.py:                          for file in path_to_walk_into.iterdir()
files_and_directories/file_and_directory_paths.py:                          for file in path_to_walk_into
files_and_directories/file_and_directory_paths.py:                       for dirc in sd_path.iterdir()
files_and_directories/file_and_directory_paths.py:                                  for dp in dirfilelist]  
files_and_directories/file_and_directory_paths.py:                       for dirc in sd_path
files_and_directories/file_and_directory_paths.py:                                  for dp in dirfilelist] 
files_and_directories/file_and_directory_paths.py:                   for path in ptwi_path.iterdir()
files_and_directories/file_and_directory_paths.py:                   for ext in extensions
files_and_directories/file_and_directory_paths.py:                   for path in ptwi_path
files_and_directories/file_and_directory_paths.py:                   for ext in extensions
files_and_directories/file_and_directory_paths.py:                        for dirc in ptwi_path.iterdir()
files_and_directories/file_and_directory_paths.py:                        for fs in file_string
files_and_directories/file_and_directory_paths.py:                       for fs in file_string
files_and_directories/file_and_directory_paths.py:                       for file in ptwi_path.glob(f"{fs}")
files_and_directories/file_and_directory_paths.py:                              for path in dirlist_top]
files_and_directories/file_and_directory_paths.py:                        for dirc in ptwi_path
files_and_directories/file_and_directory_paths.py:                        for fs in file_string
files_and_directories/file_and_directory_paths.py:                       for fs in file_string
files_and_directories/file_and_directory_paths.py:                       for file in ptwi_top.glob(f"{fs}")
files_and_directories/file_and_directory_paths.py:                              for path in dirlist_top]
files_and_directories/file_format_tweaker.py:        for p in path:          
files_and_directories/file_format_tweaker.py:          It is understood that, for each index, the corresponding input file 
files_and_directories/file_format_tweaker.py:    for emlf in eml_files:
files_and_directories/file_format_tweaker.py:    for msgf in msg_files:
files_and_directories/file_and_directory_handler.py:                for file in extension_allfiles:
files_and_directories/file_and_directory_handler.py:        for ext in extensions:
files_and_directories/file_and_directory_handler.py:            for file in extension_allfiles:
files_and_directories/file_and_directory_handler.py:        for dd in destination_directories:
files_and_directories/file_and_directory_handler.py:            for file in extension_allfiles:
files_and_directories/file_and_directory_handler.py:        for file in extension_allfiles:
files_and_directories/file_and_directory_handler.py:                                   for file in cwd.glob(fs)
files_and_directories/file_and_directory_handler.py:                for file in string_allfiles:
files_and_directories/file_and_directory_handler.py:        for fs in file_strings:
files_and_directories/file_and_directory_handler.py:                               for file in cwd.glob(fs)
files_and_directories/file_and_directory_handler.py:            for file in string_allfiles:
files_and_directories/file_and_directory_handler.py:                           for file in cwd.glob(f"{file_strings}")
files_and_directories/file_and_directory_handler.py:        for dd in destination_directories:
files_and_directories/file_and_directory_handler.py:            for file in string_allfiles:
files_and_directories/file_and_directory_handler.py:                           for file in cwd.glob(f"{file_strings}")
files_and_directories/file_and_directory_handler.py:        for file in string_allfiles:
files_and_directories/file_and_directory_handler.py:                    for sf in source_files]
files_and_directories/file_and_directory_handler.py:        for sf in source_files:
files_and_directories/file_and_directory_handler.py:        for dd in destination_directories:
files_and_directories/file_and_directory_handler.py:                    for sf in source_files]
files_and_directories/file_and_directory_handler.py:        for sf in source_files:
files_and_directories/file_and_directory_handler.py:        for dd in destination_directories:
files_and_directories/file_and_directory_handler.py:        for ext in extensions:
files_and_directories/file_and_directory_handler.py:            for dd in destination_directories:
files_and_directories/file_and_directory_handler.py:                for file in extension_allfiles:
files_and_directories/file_and_directory_handler.py:                for file in extension_allfiles:
files_and_directories/file_and_directory_handler.py:        for ext in extensions:
files_and_directories/file_and_directory_handler.py:            for file in extension_allfiles:
files_and_directories/file_and_directory_handler.py:        for dd in destination_directories:
files_and_directories/file_and_directory_handler.py:            for file in extension_allfiles:
files_and_directories/file_and_directory_handler.py:        for file in extension_allfiles:
files_and_directories/file_and_directory_handler.py:        for fs in file_strings:
files_and_directories/file_and_directory_handler.py:            for dd in destination_directories:
files_and_directories/file_and_directory_handler.py:                                   for file in cwd.glob(fs)
files_and_directories/file_and_directory_handler.py:                for file in string_allfiles:
files_and_directories/file_and_directory_handler.py:                                   for file in cwd.glob(fs)
files_and_directories/file_and_directory_handler.py:                for file in string_allfiles:
files_and_directories/file_and_directory_handler.py:        for fs in file_strings:
files_and_directories/file_and_directory_handler.py:                               for file in cwd.glob(fs)
files_and_directories/file_and_directory_handler.py:            for file in string_allfiles:
files_and_directories/file_and_directory_handler.py:                           for file in cwd.glob(f"{file_strings}")
files_and_directories/file_and_directory_handler.py:        for dd in destination_directories:
files_and_directories/file_and_directory_handler.py:            for file in string_allfiles:
files_and_directories/file_and_directory_handler.py:                           for file in cwd.glob(f"{file_strings}")
files_and_directories/file_and_directory_handler.py:        for file in string_allfiles:
files_and_directories/file_and_directory_handler.py:                                   for dirc in str(destination_directories)]
files_and_directories/file_and_directory_handler.py:        for ext in extensions:
files_and_directories/file_and_directory_handler.py:            for dd in destination_directories:
files_and_directories/file_and_directory_handler.py:                                       for file in dd.glob(f"*.{ext}")]
files_and_directories/file_and_directory_handler.py:                for file in string_allfiles:
files_and_directories/file_and_directory_handler.py:                                       for file in dd.glob(f"*.{ext}")]
files_and_directories/file_and_directory_handler.py:                for file in string_allfiles:
files_and_directories/file_and_directory_handler.py:        for ext in extensions:    
files_and_directories/file_and_directory_handler.py:                   for file in destination_directories.glob(f"*.{ext}")]
files_and_directories/file_and_directory_handler.py:            for file in string_allfiles:
files_and_directories/file_and_directory_handler.py:        for dd in destination_directories:   
files_and_directories/file_and_directory_handler.py:                                   for file in dd.glob(f"*.{extensions}")]
files_and_directories/file_and_directory_handler.py:            for file in string_allfiles:
files_and_directories/file_and_directory_handler.py:               for file in destination_directories.glob(f"*.{extensions}")]
files_and_directories/file_and_directory_handler.py:        for file in string_allfiles:
files_and_directories/file_and_directory_handler.py:                                   for dirc in str(destination_directories)]
files_and_directories/file_and_directory_handler.py:            for fs in file_strings:
files_and_directories/file_and_directory_handler.py:                for dd in destination_directories:   
files_and_directories/file_and_directory_handler.py:                                           for file in dd.glob(fs)
files_and_directories/file_and_directory_handler.py:                                           for file in
files_and_directories/file_and_directory_handler.py:                                           [fileref for fileref in dd.glob(fs)]
files_and_directories/file_and_directory_handler.py:                    for file in string_allfiles:
files_and_directories/file_and_directory_handler.py:                                           for file in dd.glob(fs)
files_and_directories/file_and_directory_handler.py:                                           for file in
files_and_directories/file_and_directory_handler.py:                                           [fileref for fileref in dd.glob(fs)]
files_and_directories/file_and_directory_handler.py:                    for file in string_allfiles:
files_and_directories/file_and_directory_handler.py:        for fs in file_strings:     
files_and_directories/file_and_directory_handler.py:                   for file in destination_directories.glob(fs)]
files_and_directories/file_and_directory_handler.py:            for file in string_allfiles:
files_and_directories/file_and_directory_handler.py:        for dd in destination_directories:
files_and_directories/file_and_directory_handler.py:                                   for file in dd.glob(file_strings)
files_and_directories/file_and_directory_handler.py:                   for file in 
files_and_directories/file_and_directory_handler.py:                   [fileref for fileref in dd.glob(file_strings)]
files_and_directories/file_and_directory_handler.py:            for file in string_allfiles:
files_and_directories/file_and_directory_handler.py:               for file in destination_directories.glob(file_strings)
files_and_directories/file_and_directory_handler.py:               for file in 
files_and_directories/file_and_directory_handler.py:               [fileref for fileref in destination_directories.glob(file_strings)]
files_and_directories/file_and_directory_handler.py:        for file in string_allfiles:
files_and_directories/file_and_directory_handler.py:                   for dirc in directory_list]
files_and_directories/file_and_directory_handler.py:    for pathDir in dirPathList:
files_and_directories/file_and_directory_handler.py:    for dirc in directory_list:
files_and_directories/file_and_directory_handler.py:        for dirc in directories:
files_and_directories/file_and_directory_handler.py:            for dd in destination_directories:
files_and_directories/file_and_directory_handler.py:        for dirc in directories:
files_and_directories/file_and_directory_handler.py:        for dd in destination_directories:
files_and_directories/file_and_directory_handler.py:            for dirc in directories:
files_and_directories/file_and_directory_handler.py:                for dd in destination_directories:
files_and_directories/file_and_directory_handler.py:            for dirc in directories:
files_and_directories/file_and_directory_handler.py:            for dd in destination_directories:
files_and_directories/file_and_directory_handler.py:            for dirc in directories:
files_and_directories/file_and_directory_handler.py:                for dd in destination_directories:
files_and_directories/file_and_directory_handler.py:            for dirc in directories:
files_and_directories/file_and_directory_handler.py:            for dd in destination_directories:
time_handling/calendar_attibute_operators.py:                        for ft in full_times:
time_handling/calendar_attibute_operators.py:                                 for i in range(lyl) 
time_handling/calendar_attibute_operators.py:                             for year in range(start_year, end_year+1)]
time_handling/calendar_attibute_operators.py:                              for year in range(start_year, end_year+1)]
time_handling/time_formatters.py:            is 1, for example in model or calendar year calculations
time_handling/time_averager.py:    x_sum = np.sum([np.sin(x) for x in angles])
time_handling/time_averager.py:    y_sum = np.sum([np.cos(x) for x in angles])
time_handling/time_averager.py:    angles = [datetime_to_radians(y) for y in x]
time_handling/datetime_operators.py:    for obj in objList:    
weather_and_climate/raster_tools.py:    list_lengths_set = set([len(raster_files_dict[key]) for key in keys])
weather_and_climate/raster_tools.py:        for i in range(lls_num):
weather_and_climate/raster_tools.py:                                for key in keys]
weather_and_climate/climate_indicators.py:    for i in range(dimensions[1]):
weather_and_climate/climate_indicators.py:        for j in range(dimensions[2]):
weather_and_climate/climate_indicators.py:    for i in range(dimensions[1]):
weather_and_climate/climate_indicators.py:        for j in range(dimensions[2]):
weather_and_climate/climate_indicators.py:    for i in range(dimensions[1]):
weather_and_climate/climate_indicators.py:        for j in range(dimensions[2]):
weather_and_climate/climate_indicators.py:    for i in range(dimensions[1]):
weather_and_climate/climate_indicators.py:        for j in range(dimensions[2]):
weather_and_climate/climate_indicators.py:        for i in range(len(hw_events_NdayMultiply)):
weather_and_climate/climate_indicators.py:            idx_to_delete = [idx[0] for idx in enumerate(hw_event_partial)]
weather_and_climate/climate_indicators.py:    for m in months:
weather_and_climate/climate_indicators.py:        for var in varlist_primary[1:]:
weather_and_climate/climate_indicators.py:            for i in range(3):
weather_and_climate/climate_indicators.py:                     for var in varlist_prim_rank_phi 
weather_and_climate/climate_indicators.py:                    for var in varlist_prim_rank_phi 
weather_and_climate/climate_indicators.py:        for iv in range(lv):
weather_and_climate/climate_indicators.py:            for i in range(records_MONTH_dm_bymonth):
weather_and_climate/climate_indicators.py:        for iv in range(lv):
weather_and_climate/climate_indicators.py:        for var in varlist_primary[1:]:
weather_and_climate/climate_indicators.py:        for iv in range(lv):
weather_and_climate/climate_indicators.py:            for y in hist_years:
weather_and_climate/climate_indicators.py:                for i in range(no_of_days):
weather_and_climate/climate_indicators.py:                for i in range(no_of_days):
weather_and_climate/climate_indicators.py:        for var in varlist_primary[1:]:
weather_and_climate/climate_indicators.py:            for i in range(2):
weather_and_climate/climate_indicators.py:        for iv in range(1,lvfsr,2):
weather_and_climate/climate_indicators.py:            for y in hist_years:
weather_and_climate/climate_indicators.py:        for iv in range(1,lvfsr,2):
weather_and_climate/climate_indicators.py:            for y in hist_years:
weather_and_climate/climate_indicators.py:        for iv in range(1,lvfsr,2):
weather_and_climate/climate_indicators.py:            for i in range(lhy):
weather_and_climate/climate_indicators.py:        for iv in range(2,lvfsr,2):
weather_and_climate/climate_indicators.py:    for i in range(lhdy_m-1):
weather_and_climate/climate_indicators.py:        for var in varlist_to_interpolate:
weather_and_climate/climate_indicators.py:            for ix in range(len(x)):
weather_and_climate/complementary-to_remodule/comparison_lineplot.py:obs_years = [date.year for date in obs_dates]
weather_and_climate/complementary-to_remodule/comparison_lineplot.py:sim_years = [date.year for date in sim_dates]
weather_and_climate/complementary-to_remodule/auxiliary_functions.py:    return [year >= year_start and year <= year_stop for year in years]
weather_and_climate/complementary-to_remodule/auxiliary_functions.py:    obs_years = [date.year for date in obs_dates]
weather_and_climate/complementary-to_remodule/auxiliary_functions.py:    sim_years = [date.year for date in sim_dates]
weather_and_climate/climate_statistics.py:    leapyear_bool_arr = [calendar.isleap(year) for year in years]
weather_and_climate/climate_statistics.py:                                        for i in range(1, ncols_obj)]
weather_and_climate/climate_statistics.py:               for m in months
weather_and_climate/climate_statistics.py:               for d in days
weather_and_climate/climate_statistics.py:               for h in hours
weather_and_climate/climate_statistics.py:               for m in months
weather_and_climate/climate_statistics.py:               for d in days
weather_and_climate/climate_statistics.py:                            for m in months
weather_and_climate/climate_statistics.py:                    climat_dates = "".join([month_number_dict[m] for m in season_months]).split()
weather_and_climate/climate_statistics.py:                climat_dates = "".join([month_number_dict[m] for m in season_months])
weather_and_climate/climate_statistics.py:            for m in months_delta:            
weather_and_climate/climate_statistics.py:            for m in months_delta: 
weather_and_climate/climate_statistics.py:                for d in days_delta:
weather_and_climate/climate_statistics.py:            for m in months_delta:
weather_and_climate/climate_statistics.py:                for d in days_delta:
weather_and_climate/climate_statistics.py:                    for h in hours_delta:
weather_and_climate/consecutive_idx_statistics.py:                for t in range(records)])
weather_and_climate/nco_tools.py:    for file in enumerate(file_list): 
weather_and_climate/nco_tools.py:    for file in enumerate(file_list): 
weather_and_climate/nco_tools.py:    for file in enumerate(file_list): 
weather_and_climate/netcdf_handler.py:    for ptwi in path_to_walk_into:
weather_and_climate/netcdf_handler.py:        for ncf in enumerate(ncgrib_file_list, start=1):
weather_and_climate/netcdf_handler.py:            for ncf in enumerate(nc_files):
weather_and_climate/netcdf_handler.py:            for ncf in enumerate(nc_files):
weather_and_climate/netcdf_handler.py:            for ncf in enumerate(nc_files):
weather_and_climate/netcdf_handler.py:                    for key in dimlist
weather_and_climate/netcdf_handler.py:                              for key in varlist
weather_and_climate/netcdf_handler.py:                    for key in dimlist
weather_and_climate/netcdf_handler.py:                              for key in varlist
weather_and_climate/netcdf_handler.py:                     for key in dimlist
weather_and_climate/netcdf_handler.py:                               for key in varlist
weather_and_climate/netcdf_handler.py:                     for key in dimlist
weather_and_climate/netcdf_handler.py:                               for key in varlist
weather_and_climate/netcdf_handler.py:                                  for path in path_list
weather_and_climate/netcdf_handler.py:                 for path in path_list]
weather_and_climate/netcdf_handler.py:                                   for f in grib_file_list
weather_and_climate/netcdf_handler.py:                         for dim in varlist
weather_and_climate/netcdf_handler.py:                         for dim in varlist
weather_and_climate/netcdf_handler.py:                         for var in varlist
weather_and_climate/netcdf_handler.py:                         for var in varlist
weather_and_climate/meteorological_variables.py:        for t in range(u_records):  
weather_and_climate/weather_software_file_creator.py:    for header in header_list:
weather_and_climate/weather_software_file_creator.py:    for t in range(lhdy):
weather_and_climate/weather_software_file_creator.py:        for ivar in range(HDY_ncols):
weather_and_climate/cdo_tools.py:    for file in file_list:
weather_and_climate/cdo_tools.py:    for file in file_list:                 
weather_and_climate/cdo_tools.py:       for file in file_list
weather_and_climate/cdo_tools.py:    for file in file_list:
weather_and_climate/cdo_tools.py:    for file in file_list:
weather_and_climate/cdo_tools.py:    for file in file_list:
weather_and_climate/cdo_tools.py:    for file in enumerate(file_list):
weather_and_climate/cdo_tools.py:    for file in file_list:            
weather_and_climate/hypothesis_tests.py:                     for path in main_path
test-base_programs/indexing_performance_test.py:itvs = [pd.Interval(i,i+step, closed = "left") for i in range(la)]
test-base_programs/matriz_turbulencia.py:        for i in range(lav):
test-base_programs/matriz_turbulencia.py:                    for j in range(lls):
test-base_programs/matriz_turbulencia.py:                                   for tupl in keyDataList
test-base_programs/matriz_turbulencia.py:                               for tupl in keyDataList
test-base_programs/matriz_turbulencia.py:    for i in range(lwsba):
test-base_programs/matriz_turbulencia.py:                                for case in vars().keys() 
test-base_programs/matriz_turbulencia.py:                           for case in vars().keys() 
test-base_programs/matriz_turbulencia.py:       for interval in WS_byBins_unique]
test-base_programs/matriz_turbulencia.py:           for interval in direc_byBins_unique
test-base_programs/matriz_turbulencia.py:                            for mon in range(1,13)]
test-base_programs/matriz_turbulencia.py:                           for hour in range(24)]
test-base_programs/matriz_turbulencia.py:        for direc in enumerate(direc_byBins_unique):
test-base_programs/matriz_turbulencia.py:            for m in month_range:
test-base_programs/matriz_turbulencia.py:                for h in hour_range:
test-base_programs/matriz_turbulencia.py:        for m in month_range:
test-base_programs/matriz_turbulencia.py:            for h in hour_range:
test-base_programs/matriz_turbulencia.py:        for direc in enumerate(direc_byBins_unique):
test-base_programs/matriz_turbulencia.py:            for h in hour_range:            
test-base_programs/matriz_turbulencia.py:        for direc in enumerate(direc_byBins_unique):
test-base_programs/matriz_turbulencia.py:            for m in month_range:
test-base_programs/matriz_turbulencia.py:        for direc in enumerate(direc_byBins_unique):
test-base_programs/matriz_turbulencia.py:        for m in month_range:
test-base_programs/matriz_turbulencia.py:        for h in hour_range:      
test-base_programs/matriz_turbulencia.py:        for direc in enumerate(direc_byBins_unique):
test-base_programs/matriz_turbulencia.py:            for m in month_range:
test-base_programs/matriz_turbulencia.py:                for h in hour_range:
test-base_programs/matriz_turbulencia.py:        for m in month_range:
test-base_programs/matriz_turbulencia.py:            for h in hour_range:
test-base_programs/matriz_turbulencia.py:        for direc in enumerate(direc_byBins_unique):
test-base_programs/matriz_turbulencia.py:            for h in hour_range:            
test-base_programs/matriz_turbulencia.py:        for direc in enumerate(direc_byBins_unique):
test-base_programs/matriz_turbulencia.py:            for m in month_range:
test-base_programs/matriz_turbulencia.py:        for direc in enumerate(direc_byBins_unique):
test-base_programs/matriz_turbulencia.py:        for m in month_range:
test-base_programs/matriz_turbulencia.py:        for h in hour_range:      
test-base_programs/kopiatu_beharrezko_guztia_eta_konprimatu.py:                  for key in delFileObj.keys()
test-base_programs/climate-change/codes/download_EOBS.py:for p in periods:
test-base_programs/climate-change/codes/download_CORDEX.py:eval_start_ys = [f"{i:04d}" for i in range(1979,2019)]
test-base_programs/climate-change/codes/download_CORDEX.py:hist_start_ys = [f"{i:04d}" for i in range(1948,2006)]
test-base_programs/climate-change/codes/download_CORDEX.py:rcp_all_start_ys = [f"{i:04d}" for i in range(2005,2100)]
test-base_programs/climate-change/codes/download_CORDEX.py:eval_end_ys = [f"{i:04d}" for i in range(1979,2019)]
test-base_programs/climate-change/codes/download_CORDEX.py:hist_end_ys = [f"{i:04d}" for i in range(1948,2006)]
test-base_programs/climate-change/codes/download_CORDEX.py:rcp_all_end_ys = [f"{i:04d}" for i in range(2005,2100)]
test-base_programs/climate-change/codes/download_ERA5-Land.py:year_range = [f"{i:04d}" for i in range(1977,1978)]
test-base_programs/climate-change/codes/download_ERA5-Land.py:month_range = [f"{i:02d}" for i in range(1,2)]
test-base_programs/climate-change/codes/download_ERA5-Land.py:day_range = [f"{i:02d}" for i in range(1,2)]
test-base_programs/climate-change/codes/download_ERA5-Land.py:hour_range = [f"{i:02d}:00" for i in range(0,1)]
test-base_programs/climate-change/codes/download_ERA5-Land.py:    for y in year_range:
test-base_programs/climate-change/codes/download_ERA5-Land.py:        for m in month_range:
test-base_programs/climate-change/codes/download_ERA5-Land.py:            for d in day_range:
test-base_programs/climate-change/codes/download_ERA5-Land.py:                for h in hour_range:
test-base_programs/climate-change/codes/download_ERA5.py:year_range = [f"{i:04d}" for i in range(1977,1978)]
test-base_programs/climate-change/codes/download_ERA5.py:month_range = [f"{i:02d}" for i in range(1,2)]
test-base_programs/climate-change/codes/download_ERA5.py:day_range = [f"{i:02d}" for i in range(1,2)]
test-base_programs/climate-change/codes/download_ERA5.py:hour_range = [f"{i:02d}:00" for i in range(0,1)]
test-base_programs/climate-change/codes/download_ERA5.py:    for y in year_range:
test-base_programs/climate-change/codes/download_ERA5.py:        for m in month_range:
test-base_programs/climate-change/codes/download_ERA5.py:            for d in day_range:
test-base_programs/climate-change/codes/download_ERA5.py:                for h in hour_range:
test-base_programs/1st_loop_common-union_datetimes.py:for eddk in dt_dict.keys():
test-base_programs/1st_loop_common-union_datetimes.py:                     for ut in unformatted_timeList]
test-base_programs/1st_loop_common-union_datetimes.py:    for i in range(len(dt_dict))
test-base_programs/indexing_then_localizing_performance_test.py:itvs=[pd.Interval(i,i+step, closed="left") for i in range(la)]
test-base_programs/deskargatu_bideoak_vimeotik.py:for secDirListEnum in enumerate(curPathDirArr, start=1):
test-base_programs/neighbour_wf_coord_table_generator.py:l=[[l0[i].split("\t")[0],l0[i].split("\t")[1]] for i in range(len(l0))]
test-base_programs/neighbour_wf_coord_table_generator.py:turbine_labels = [f"{neighbour_turbine_label_prefix}{i:03d}" for i in range(1,len(df)+1)]
strings/find_substring_index_REPOWER_TOFUNCTION.py:        substrLowestIdx = [m.start(0) for m in allMatchesIterator]
strings/find_substring_index_REPOWER_TOFUNCTION.py:        substrLowestIdx = [m.start(0) for m in allMatchesIterator]
strings/string_handler.py:            substrLowestIdx = [m.start(0) for m in allMatchesIterator]
strings/string_handler.py:            substrLowestIdx = [m.start(0) for m in allMatchesIterator]
strings/string_handler.py:    for file in obj_list:
dictionaries/dict_operators.py:                for key in dict1.keys() & dict2}
dictionaries/dict_operators.py:                  for key in dict1.keys() & dict2}
dictionaries/dict_operators.py:                 for key in dict1.keys() & dict2}
dictionaries/dict_operators.py:                for key in dict1.keys() & dict2}
dictionaries/dict_operators.py:                         for key in keys_sorted_list}
dictionaries/dict_operators.py:    for d in dict_list:
pandas_data_frames/data_frame_handler.py:    for file in input_file_list:
pandas_data_frames/data_frame_handler.py:        for snf in sheet_name_file:
pandas_data_frames/data_frame_handler.py:    for file in input_file_list:
pandas_data_frames/data_frame_handler.py:    for file in input_file_list:
arrays_and_lists/array_numerical_operations.py:        = [len(list(group)) for group in mit.consecutive_groups(array)]
arrays_and_lists/array_numerical_operations.py:            = [lng for lng in consec_times_array_byGroups_lengths if lng >1]
arrays_and_lists/array_numerical_operations.py:        = [len(group) for group in bool_groups if group[0] and len(group)>1]
arrays_and_lists/array_numerical_operations.py:                for t in range(records-1)])
arrays_and_lists/array_handler.py:    dimList = np.unique([len(arr.shape) for arr in arrayList])
arrays_and_lists/array_handler.py:                      for i in range(shape)]
arrays_and_lists/array_handler.py:                              for j in range(shape) 
arrays_and_lists/array_handler.py:    unique_type_list = np.unique([str(type(element)) for element in list_of_objects])
